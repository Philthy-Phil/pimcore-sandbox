version: '3.7'

services:

  pimcore:
    image: ${PIMCORE_BASE_IMAGE_NAME}:${PIMCORE_IMAGE_TAG}
    networks:
      - fretwork
    volumes:
      - ./pimcore:/var/www/html
    ports:
      - "${PIMCORE_PORT_HTTP}:80"
      - "${PIMCORE_PORT_HTTPS}:443"
    environment:
      - PHP_IDE_CONFIG="serverName=localhost"
      - MYSQL_ROOT_PASSWORD=${DATABASE_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_MYSQL_DATABASE}
      - MYSQL_USER=${DATABASE_MYSQL_USER}
      - MYSQL_PASSWORD=${DATABASE_MYSQL_PASSWORD}
      - MYSQL_HOST=${DATABASE_MYSQL_HOST}
      - PIMCORE_ADMIN_USER=${PIMCORE_ADMIN_USER}
      - PIMCORE_ADMIN_PASSWORD=${PIMCORE_ADMIN_PASSWORD}

  pimcore-debug:
    image: pimcore/pimcore:PHP8.0-apache-debug
    networks:
      - fretwork
    volumes:
      - ./pimcore:/var/www/html
    ports:
      - "${PIMCORE_DEBUG_PORT}:80"
    depends_on:
      - db
      - redis
    environment:
      - PHP_IDE_CONFIG="serverName=localhost"
      - MYSQL_ROOT_PASSWORD=${DATABASE_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_MYSQL_DATABASE}
      - MYSQL_USER=${DATABASE_MYSQL_USER}
      - MYSQL_PASSWORD=${DATABASE_MYSQL_PASSWORD}
      - MYSQL_HOST=${DATABASE_MYSQL_HOST}
      - PIMCORE_ADMIN_USER=${PIMCORE_ADMIN_USER}
      - PIMCORE_ADMIN_PASSWORD=${PIMCORE_ADMIN_PASSWORD}

  db:
    image: ${DB_IMAGE_NAME}:${DB_IMAGE_TAG}
    networks:
      - fretwork
    working_dir: /application
    command: [
      mysqld,
      --character-set-server=utf8mb4,
      --collation-server=utf8mb4_unicode_ci,
      --innodb-file-format=Barracuda,
      --innodb-large-prefix=ON,
      --innodb-file-per-table=1
    ]
    volumes:
      - ./db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_MYSQL_DATABASE}
      - MYSQL_USER=${DATABASE_MYSQL_USER}
      - MYSQL_PASSWORD=${DATABASE_MYSQL_PASSWORD}
      - MYSQL_HOST=${DATABASE_MYSQL_HOST}

  redis:
    image: ${REDIS_IMAGE_NAME}:${REDIS_IMAGE_TAG}
    networks:
      - fretwork

  adminer:
    image: ${ADMINER_IMAGE_NAME}
    networks:
      - fretwork
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "${ADMINER_PORT}:8080"

#  prune-nodes:
#    image: docker
#    command: ["docker","system", "prune", "-f"]
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    deploy:
#      mode: global
#      labels:
#        - "swarm.cronjob.enable=true"
#        - "swarm.cronjob.schedule== */5 * * * *"
#        - "swarm.cronjob.skip-running=false"
#      restart_policy:
#        condition: none

networks:
  fretwork:
    driver: overlay

volumes:
  db:
  pimcore: